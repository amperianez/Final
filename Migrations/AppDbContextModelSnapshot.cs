// <auto-generated />
using Final.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Final.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("CountermeasureMonster", b =>
                {
                    b.Property<int>("CountermeasuresCountermeasureID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MonstersMonsterID")
                        .HasColumnType("INTEGER");

                    b.HasKey("CountermeasuresCountermeasureID", "MonstersMonsterID");

                    b.HasIndex("MonstersMonsterID");

                    b.ToTable("CountermeasureMonster");
                });

            modelBuilder.Entity("Final.Models.Countermeasure", b =>
                {
                    b.Property<int>("CountermeasureID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("TypeAndSubname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CountermeasureID");

                    b.ToTable("Countermeasures");
                });

            modelBuilder.Entity("Final.Models.Habitat", b =>
                {
                    b.Property<int>("HabitatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("HabitatDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HabitatName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("HabitatID");

                    b.ToTable("Habitats");
                });

            modelBuilder.Entity("Final.Models.Monster", b =>
                {
                    b.Property<int>("MonsterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MonsterName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("WeaknessID")
                        .HasColumnType("INTEGER");

                    b.HasKey("MonsterID");

                    b.HasIndex("WeaknessID")
                        .IsUnique();

                    b.ToTable("Monsters");
                });

            modelBuilder.Entity("Final.Models.MonsterHabitat", b =>
                {
                    b.Property<int>("HabitatID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MonsterID")
                        .HasColumnType("INTEGER");

                    b.HasKey("HabitatID", "MonsterID");

                    b.HasIndex("MonsterID");

                    b.ToTable("MonsterHabitats");
                });

            modelBuilder.Entity("Final.Models.Weakness", b =>
                {
                    b.Property<int>("WeaknessID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("WeaknessDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("WeaknessID");

                    b.ToTable("Weaknesses");
                });

            modelBuilder.Entity("CountermeasureMonster", b =>
                {
                    b.HasOne("Final.Models.Countermeasure", null)
                        .WithMany()
                        .HasForeignKey("CountermeasuresCountermeasureID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Final.Models.Monster", null)
                        .WithMany()
                        .HasForeignKey("MonstersMonsterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Final.Models.Monster", b =>
                {
                    b.HasOne("Final.Models.Weakness", "Weakness")
                        .WithOne("Monster")
                        .HasForeignKey("Final.Models.Monster", "WeaknessID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Weakness");
                });

            modelBuilder.Entity("Final.Models.MonsterHabitat", b =>
                {
                    b.HasOne("Final.Models.Habitat", "Habitat")
                        .WithMany("MonsterHabitats")
                        .HasForeignKey("HabitatID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Final.Models.Monster", "Monster")
                        .WithMany("MonsterHabitats")
                        .HasForeignKey("MonsterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Habitat");

                    b.Navigation("Monster");
                });

            modelBuilder.Entity("Final.Models.Habitat", b =>
                {
                    b.Navigation("MonsterHabitats");
                });

            modelBuilder.Entity("Final.Models.Monster", b =>
                {
                    b.Navigation("MonsterHabitats");
                });

            modelBuilder.Entity("Final.Models.Weakness", b =>
                {
                    b.Navigation("Monster")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
